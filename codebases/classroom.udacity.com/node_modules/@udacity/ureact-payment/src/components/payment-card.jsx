import {Heading, Text} from '@udacity/veritas-components';
import React, {Component}        from 'react';
import PropTypes       from 'prop-types';
import {__}            from '../helpers/localization';
import styles          from './payment-card.scss';

export default class PaymentCard extends Component {

  static propTypes = {
    billingMethod: PropTypes.shape({
      urn: PropTypes.string.isRequired,
      type: PropTypes.string.isRequired,
      credit_card: PropTypes.shape({
        name: PropTypes.string.isRequired,
        brand: PropTypes.string.isRequired,
        exp_month: PropTypes.string.isRequired,
        exp_year: PropTypes.string.isRequired,
        last4: PropTypes.string.isRequired,
        address: PropTypes.shape({
          line1: PropTypes.string.isRequired,
          line2: PropTypes.string,
          city: PropTypes.string.isRequired,
          region: PropTypes.string.isRequired,
          country: PropTypes.string.isRequired,
          postal_code: PropTypes.string.isRequired
        })
      }).isRequired
    })
  };

  renderExpiration = () => {
    const {
      billingMethod: {
        credit_card: {exp_month, exp_year}
      }
    } = this.props;
    const month =
      exp_month < 10 ? _.padStart(_.toString(exp_month), '0') : exp_month;
    const year = exp_year - 2000;
    return `Expires ${month}/${year}`;
  };

  render() {
    const {
      billingMethod: {
        credit_card: {
          address: {line1, line2, city, region, postal_code},
          brand,
          last4,
          name
        }
      }
    } = this.props;

    let ccIcon = 'cc-icon';

    if (brand) {
      ccIcon = _.kebabCase(brand) + '-icon';
    }

    const hasAddress = _.isString(line1);

    return (
      <div>
        <div className={styles['cc-container']}>
          <div className={styles.half}>
            <Heading size="h6" color="silver">
              {__('card information')}
            </Heading>
            <div className={styles['cc-info']}>
              <span className={styles['cc-icon']}>
                <span className={styles[ccIcon]} />
              </span>
              <span>
                <Text spacing="none">**** **** **** {last4}</Text>
                <Text>{this.renderExpiration()}</Text>
              </span>
            </div>
          </div>
          {hasAddress && (
            <div className={styles.half}>
              <Heading size="h6" color="silver">
                {__('billing address')}
              </Heading>
              <address>
                <Text spacing="none">{name}</Text>
                <Text spacing="none">{line1}</Text>
                {line2 && <Text spacing="none">{line2}</Text>}
                <Text spacing="none">
                  {city}, {region} {postal_code}
                </Text>
              </address>
            </div>
          )}
        </div>
      </div>
    );
  }
}
