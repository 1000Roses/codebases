'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = exports.RatingColors = undefined;

var _createClass = function() {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();

var _dec, _class, _class2, _temp;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _stars = require('./stars.scss');

var _stars2 = _interopRequireDefault(_stars);

var _i18n = require('../i18n');

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var RatingColors = exports.RatingColors = {
    GRAY: 'gray',
    WHITE: 'white'
};

var Stars = (_dec = cssModule(_stars2.default, {
    allowMultiple: true
}), _dec(_class = (_temp = _class2 = function(_React$Component) {
    _inherits(Stars, _React$Component);

    function Stars() {
        _classCallCheck(this, Stars);

        return _possibleConstructorReturn(this, (Stars.__proto__ || Object.getPrototypeOf(Stars)).apply(this, arguments));
    }

    _createClass(Stars, [{
        key: 'handleClickStar',
        value: function handleClickStar(rating) {
            this.props.onClick(rating);
        }
    }, {
        key: 'overlayStars',
        value: function overlayStars() {
            var _this2 = this;

            var starsArray = _.times(5, Number);

            return starsArray.map(function(star, i) {
                var rating = i + 1;
                var text = (0, _i18n.__)('Vote <%= rating %> stars', {
                    rating: rating
                });
                return _react2.default.createElement(
                    'li', {
                        key: i,
                        styleName: 'star-' + rating
                    },
                    _react2.default.createElement(
                        'a', {
                            href: '#',
                            title: text,
                            styleName: 'star-' + rating,
                            onClick: function onClick() {
                                return _this2.handleClickStar(rating);
                            }
                        },
                        text
                    )
                );
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props,
                color = _props.color,
                rating = _props.rating;


            return _react2.default.createElement(
                'div', {
                    styleName: 'container-' + color
                },
                _react2.default.createElement(
                    'ol', {
                        styleName: rating ? 'active-' + rating : null
                    },
                    this.overlayStars()
                )
            );
        }
    }]);

    return Stars;
}(_react2.default.Component), _class2.displayName = 'rate-nanodegree/stars', _class2.propTypes = {
    color: _propTypes2.default.oneOf(_.values(RatingColors)),
    static: _propTypes2.default.bool,
    rating: _propTypes2.default.number,
    onClick: _propTypes2.default.func
}, _class2.defaultProps = {
    static: false
}, _class2.defaultProps = {
    rating: null,
    color: RatingColors.GRAY,
    static: false,
    onClick: _.noop
}, _temp)) || _class);
exports.default = Stars;