'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
            }
        }
    }
    return target;
};

var _createClass = function() {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();

var _dec, _class, _class2, _temp;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _tooltip = require('../tooltip');

var _tooltip2 = _interopRequireDefault(_tooltip);

var _omit2 = require('lodash/omit');

var _omit3 = _interopRequireDefault(_omit2);

var _reactCssModules = require('react-css-modules');

var _reactCssModules2 = _interopRequireDefault(_reactCssModules);

var _indexModule = require('./index.module.scss');

var _indexModule2 = _interopRequireDefault(_indexModule);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var Textarea = (_dec = (0, _reactCssModules2.default)(_indexModule2.default), _dec(_class = (_temp = _class2 = function(_React$Component) {
    _inherits(Textarea, _React$Component);

    function Textarea(props) {
        _classCallCheck(this, Textarea);

        var _this = _possibleConstructorReturn(this, (Textarea.__proto__ || Object.getPrototypeOf(Textarea)).call(this, props));

        _this.setRef = function(node) {
            _this.textareaRef = node;
        };

        _this.textareaRef = null;
        return _this;
    }

    _createClass(Textarea, [{
        key: 'getRef',
        value: function getRef() {
            return this.textareaRef || {};
        }
    }, {
        key: 'focus',
        value: function focus() {
            this.getRef().focus();
        }
    }, {
        key: 'getValue',
        value: function getValue() {
            return this.getRef().value;
        }
    }, {
        key: 'renderTextarea',
        value: function renderTextarea() {
            var _props = this.props,
                error = _props.error,
                className = _props.className;


            return _react2.default.createElement('textarea', _extends({}, (0, _omit3.default)(this.props, ['error', 'errorPlacement', 'styles']), {
                ref: this.setRef,
                className: _indexModule2.default[error ? 'textarea-error' : 'textarea'] + ' ' + className
            }));
        }
    }, {
        key: 'render',
        value: function render() {
            var _props2 = this.props,
                error = _props2.error,
                errorPlacement = _props2.errorPlacement;


            if (error) {
                return _react2.default.createElement(
                    _tooltip2.default, {
                        placement: errorPlacement,
                        overlay: _react2.default.createElement(
                            'span',
                            null,
                            error
                        )
                    },
                    this.renderTextarea()
                );
            } else {
                return this.renderTextarea();
            }
        }
    }]);

    return Textarea;
}(_react2.default.Component), _class2.propTypes = {
    error: _propTypes2.default.string,
    errorPlacement: _propTypes2.default.oneOf(['top', 'right', 'bottom', 'left'])
}, _class2.defaultProps = {
    error: null,
    errorPlacement: 'right'
}, _temp)) || _class);
exports.default = Textarea;