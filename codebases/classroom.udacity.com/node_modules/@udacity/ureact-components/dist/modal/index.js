'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
            }
        }
    }
    return target;
};

var _createClass = function() {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();

var _dec, _class, _class2, _temp2;

var _ureactGlyph = require('@udacity/ureact-glyph');

var _ureactGlyph2 = _interopRequireDefault(_ureactGlyph);

var _reactModal = require('react-modal');

var _reactModal2 = _interopRequireDefault(_reactModal);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _noop2 = require('lodash/noop');

var _noop3 = _interopRequireDefault(_noop2);

var _omit2 = require('lodash/omit');

var _omit3 = _interopRequireDefault(_omit2);

var _reactCssModules = require('react-css-modules');

var _reactCssModules2 = _interopRequireDefault(_reactCssModules);

var _indexModule = require('./index.module.scss');

var _indexModule2 = _interopRequireDefault(_indexModule);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

// Configure react-modal to use document.body to host modals.
_reactModal2.default.setAppElement('body');

var UreactModal = (_dec = (0, _reactCssModules2.default)(_indexModule2.default), _dec(_class = (_temp2 = _class2 = function(_React$Component) {
    _inherits(UreactModal, _React$Component);

    function UreactModal() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, UreactModal);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = UreactModal.__proto__ || Object.getPrototypeOf(UreactModal)).call.apply(_ref, [this].concat(args))), _this), _this.handleAfterOpen = function() {
            var close = _this.refs.close;


            if (close) {
                close.focus();
            }

            _this.props.onAfterOpen();
        }, _this.handleClose = function(evt) {
            var onRequestClose = _this.props.onRequestClose;


            evt.preventDefault();
            onRequestClose(evt);
        }, _this.handleCloseBottom = function(evt) {
            var close = _this.refs.close;


            if (close) {
                evt.preventDefault();
                close.focus();
            }
        }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(UreactModal, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                className = _props.className,
                fullScreen = _props.fullScreen,
                overlayClassName = _props.overlayClassName,
                isCloseVisible = _props.isCloseVisible;


            return _react2.default.createElement(
                _reactModal2.default,
                _extends({}, (0, _omit3.default)(this.props, ['children', 'isCloseVisible']), {
                    onAfterOpen: this.handleAfterOpen,
                    className: _indexModule2.default[fullScreen ? 'fullscreen' : 'content'] + ' ' + className,
                    overlayClassName: _indexModule2.default['overlay'] + ' ' + overlayClassName
                }),
                isCloseVisible ? _react2.default.createElement(
                    'a', {
                        href: '#',
                        className: _indexModule2.default['close'],
                        onClick: this.handleClose,
                        title: 'Close Modal',
                        ref: 'close'
                    },
                    _react2.default.createElement(_ureactGlyph2.default, {
                        glyph: 'close-md',
                        text: 'Close Modal'
                    })
                ) : null,
                _react2.default.createElement(
                    'div',
                    null,
                    this.props.children
                ),
                isCloseVisible ? _react2.default.createElement(
                    'a', {
                        href: '#',
                        className: _indexModule2.default['close-bottom'],
                        onFocus: this.handleCloseBottom,
                        onClick: this.handleClose,
                        ref: 'close-bottom'
                    },
                    'Close Modal'
                ) : null
            );
        }
    }]);

    return UreactModal;
}(_react2.default.Component), _class2.displayName = 'ureact-modal', _class2.propTypes = _extends({}, _reactModal2.default.propTypes, {
    isCloseVisible: _propTypes2.default.bool,
    fullScreen: _propTypes2.default.bool
}), _class2.defaultProps = {
    isCloseVisible: true,
    contentLabel: 'Modal',
    onAfterOpen: _noop3.default,
    fullScreen: false
}, _temp2)) || _class);
exports.default = UreactModal;