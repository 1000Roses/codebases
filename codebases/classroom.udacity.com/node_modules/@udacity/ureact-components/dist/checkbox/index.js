'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
            }
        }
    }
    return target;
};

var _createClass = function() {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();

var _class, _temp;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _indexModule = require('./index.module.scss');

var _indexModule2 = _interopRequireDefault(_indexModule);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var Checkbox = (_temp = _class = function(_React$Component) {
    _inherits(Checkbox, _React$Component);

    function Checkbox() {
        _classCallCheck(this, Checkbox);

        return _possibleConstructorReturn(this, (Checkbox.__proto__ || Object.getPrototypeOf(Checkbox)).apply(this, arguments));
    }

    _createClass(Checkbox, [{
        key: '_generateRandomId',
        value: function _generateRandomId() {
            return 'ureact-checkbox-' + Math.random().toString(36).slice(-8);
        }
    }, {
        key: 'render',
        value: function render() {
            // id is needed for label to work properly
            var _props = this.props,
                _props$id = _props.id,
                id = _props$id === undefined ? this._generateRandomId() : _props$id,
                label = _props.label,
                children = _props.children,
                className = _props.className,
                style = _props.style;

            // removes children to prevent double render inside input

            var allowedProps = _extends({}, this.props, {
                children: null
            });

            return _react2.default.createElement(
                'div', {
                    className: className
                },
                _react2.default.createElement(
                    'span', {
                        className: '' + _indexModule2.default['wrapper']
                    },
                    _react2.default.createElement('input', _extends({}, allowedProps, {
                        id: id,
                        type: 'checkbox',
                        style: style,
                        className: '' + _indexModule2.default['checkbox']
                    })),
                    label || children ? _react2.default.createElement(
                        'label', {
                            htmlFor: id,
                            className: '' + _indexModule2.default['label']
                        },
                        label || this.props.children
                    ) : null
                )
            );
        }
    }]);

    return Checkbox;
}(_react2.default.Component), _class.displayName = 'ureact-checkbox', _class.propType = {
    label: _propTypes2.default.string
}, _temp);
exports.default = Checkbox;