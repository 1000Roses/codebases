'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;

var _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
            }
        }
    }
    return target;
};

var _createClass = function() {
    function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
            var descriptor = props[i];
            descriptor.enumerable = descriptor.enumerable || false;
            descriptor.configurable = true;
            if ("value" in descriptor) descriptor.writable = true;
            Object.defineProperty(target, descriptor.key, descriptor);
        }
    }
    return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
    };
}();

var _dec, _class, _class2, _temp;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _omit2 = require('lodash/omit');

var _omit3 = _interopRequireDefault(_omit2);

var _reactCssModules = require('react-css-modules');

var _reactCssModules2 = _interopRequireDefault(_reactCssModules);

var _indexModule = require('./index.module.scss');

var _indexModule2 = _interopRequireDefault(_indexModule);

function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}

function _objectWithoutProperties(obj, keys) {
    var target = {};
    for (var i in obj) {
        if (keys.indexOf(i) >= 0) continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
        target[i] = obj[i];
    }
    return target;
}

function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
    }
}

function _possibleConstructorReturn(self, call) {
    if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
            value: subClass,
            enumerable: false,
            writable: true,
            configurable: true
        }
    });
    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}

var Switch = (_dec = (0, _reactCssModules2.default)(_indexModule2.default, {
    allowMultiple: true
}), _dec(_class = (_temp = _class2 = function(_React$Component) {
    _inherits(Switch, _React$Component);

    function Switch(props) {
        _classCallCheck(this, Switch);

        var _this = _possibleConstructorReturn(this, (Switch.__proto__ || Object.getPrototypeOf(Switch)).call(this, props));

        _this.handleChange = function(e) {
            var onChange = _this.props.onChange;


            _this.setState({
                isBusy: true
            });
            Promise.resolve(onChange(e)).catch(function() {
                _this.getRef().checked = !_this.getRef().checked;
            }).finally(function() {
                _this.setState({
                    isBusy: false
                });
            });
        };

        _this.setRef = function(node) {
            _this.inputRef = node;
        };

        _this.isChecked = function() {
            return _this.getRef() ? Boolean(_this.getRef().checked) : _this.props.defaultChecked;
        };

        _this._generateId = Math.random().toString(36).slice(-8);

        _this.state = {
            isBusy: false
        };

        _this.inputRef = null;
        return _this;
    }

    _createClass(Switch, [{
        key: 'getRef',
        value: function getRef() {
            return this.inputRef || {};
        }
    }, {
        key: 'render',
        value: function render() {
            // id is needed for label to work properly
            var id = this.props.id || this._generateId;
            var isBusy = this.state.isBusy;

            var _props = this.props,
                checkedLabel = _props.checkedLabel,
                className = _props.className,
                uncheckedLabel = _props.uncheckedLabel,
                others = _objectWithoutProperties(_props, ['checkedLabel', 'className', 'uncheckedLabel']);

            return _react2.default.createElement(
                'div', {
                    className: className,
                    styleName: 'switch'
                },
                _react2.default.createElement('input', _extends({
                    disabled: isBusy
                }, (0, _omit3.default)(others, 'styles'), {
                    id: id,
                    onChange: this.handleChange,
                    ref: this.setRef,
                    styleName: 'checkbox ' + (isBusy ? 'busy' : ''),
                    type: 'checkbox'
                })),
                _react2.default.createElement(
                    'label', {
                        htmlFor: id,
                        styleName: 'label'
                    },
                    _react2.default.createElement('div', {
                        styleName: 'knob'
                    })
                ),
                checkedLabel && uncheckedLabel ? _react2.default.createElement(
                    'span', {
                        styleName: this.isChecked() ? 'checked' : 'unchecked'
                    },
                    this.isChecked() ? checkedLabel : uncheckedLabel
                ) : null
            );
        }
    }]);

    return Switch;
}(_react2.default.Component), _class2.displayName = 'ureact-switch', _class2.propTypes = {
    checkedLabel: _propTypes2.default.string,
    className: _propTypes2.default.string,
    defaultChecked: _propTypes2.default.bool,
    onChange: _propTypes2.default.func,
    uncheckedLabel: _propTypes2.default.string
}, _temp)) || _class);
exports.default = Switch;