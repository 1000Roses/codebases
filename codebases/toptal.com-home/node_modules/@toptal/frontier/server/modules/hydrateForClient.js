import React from 'react'
import ReactDOM from 'react-dom'

// eslint-disable-next-line
import {
    shouldHydrateComponent
} from '~/frontier.config'

import isBrowser from '../../lib/is-browser'

const hydrateComponent = Component => {
    const initialProps = document.querySelector('#initial-props')

    // This condition is needed for HMR to work since it calls
    // hydrateForClient multiple times.
    if (initialProps) {
        const props = JSON.parse(decodeURIComponent(initialProps.text))
        ReactDOM.hydrate( <
            Component { ...props
            }
            />,
            document.querySelector('#page-root')
        )
    }
}

// This is needed in order to have a single entry point
// per page for both server and client (webpack).
const hydrateForClient = Component => {
    const shouldHydrate = shouldHydrateComponent() && isBrowser()

    if (shouldHydrate) {
        hydrateComponent(Component)
    }

    return Component
}

export default hydrateForClient